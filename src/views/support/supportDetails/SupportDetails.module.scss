@use "@/styles/globals.scss" as *;
.container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  flex: 1;
  margin-bottom: 2%;
  height: 100%;
  .infoContainer {
    .transactionId {
      font-size: 1.25rem;
      font-weight: 300;
      font-style: italic;
      color: #727272;
    }
  }
  .chatWindow {
    display: flex;
    gap: 1rem;
    flex: 1;
    background-color: rgb(245, 245, 245);
    border-radius: 1rem;
    // height: 100%;
    overflow-y: auto;
    // flex-direction: column-reverse;
    flex-direction: column;
    padding: 2%;
    .chatContainer {
      display: flex;
      flex-direction: column-reverse;
      gap: 1rem;
      flex: 1; 
    .chat {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      width: 100%;

      .chatBubble {
        padding: 1rem;
        border-radius: 1rem;
        background-color: white;
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);
        width: 80%;
        .chatText {
          font-size: 1rem;
          font-weight: 300;
          color: black;
        }
        .sender {
          font-size: 0.75rem;
          font-weight: 300;
          color: rgb(49, 49, 49);
        }
        &.chatBubbleRight {
          background-color: var(--primary);
          color: white;
          // add a border to the right side making it look like a chat bubble
          border-top-right-radius: 10;
          border-bottom-right-radius: 0;

          // align the text to the right
          display: flex;
          flex-direction: column;
          align-items: flex-end;
          text-align: right;
          justify-content: center;
          .chatText {
            color: white;
          }
          .sender {
            color: rgb(209, 209, 209);
          }
        }
      }
      .chatTime {
        font-size: 0.75rem;
        font-weight: 300;
        color: rgb(48, 48, 48);

        &.chatTimeRight {
          display: flex;
          justify-content: flex-end;
        }
      }
      &.rightChat {
        align-items: flex-end;
      }
    }
    }

    @include mobile {
      min-height: 480px;
    }
  }
  .responseContainer {
    // sticky container to the bottom
    position: sticky;
    bottom: 0;
    display: flex;
    gap: 0.5rem;
    width: 100%;
    .editor {
      width: 100%;
    }

    @include mobile {
      position: static;
    }
  }
  @include mobile {
    .chatWindow {
      padding: 1rem;
      .chatContainer {
        gap: 0.5rem;
        .chat {
          .chatBubble {
            width: 100%;
          }
        }
      }
    }
    .responseContainer {
      flex-direction: column;
      gap: 0.25rem;
    }
  }
}


.textArea {
  // match the stylings we applied to the TinyMCE editor
  width: 100%;
    background: rgba(24, 24, 24, 0.76) !important;
  border: 1px solid var(--color-metallic-blue-dark);
  border-radius: 8px;
  padding: 4px;
}


.editorWrapper {
  margin-top: 8px;

  // Style the TinyMCE editor to match our theme
  :global(.tox) {
    background: transparent !important;
    border: 1px solid var(--color-metallic-blue-dark) !important;
    border-radius: 8px !important;
  }

  :global(.tox-tinymce) {
    background: rgba(0, 0, 0, 0.3) !important;
    border-radius: 8px !important;
  }

  :global(.tox-toolbar__group) {
    background: rgba(0, 0, 0, 0.5) !important;
  }

  :global(.tox-edit-area__iframe) {
    background: rgba(0, 0, 0, 0.2) !important;
  }
}
